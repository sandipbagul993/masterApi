// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Master.API.Models;

public partial class MasterDBContext : DbContext
{
    public MasterDBContext(DbContextOptions<MasterDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Airline> Airlines { get; set; }

    public virtual DbSet<Airport> Airports { get; set; }

    public virtual DbSet<Application> Applications { get; set; }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<Flight> Flights { get; set; }

    public virtual DbSet<Hr> Hrs { get; set; }

    public virtual DbSet<Interview> Interviews { get; set; }

    public virtual DbSet<Interviewer> Interviewers { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<Passenger> Passengers { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Airline>(entity =>
        {
            entity.HasKey(e => e.AirlineId).HasName("PK__Airlines__DC458273FF0F859D");

            entity.Property(e => e.AirlineId).HasColumnName("AirlineID");
            entity.Property(e => e.AirlineName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LogoUrl).HasMaxLength(255);
        });

        modelBuilder.Entity<Airport>(entity =>
        {
            entity.HasKey(e => e.AirportId).HasName("PK__Airports__E3DBE0EAA90429B1");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.City).WithMany(p => p.Airports)
                .HasForeignKey(d => d.CityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Airports__CityId__41EDCAC5");
        });

        modelBuilder.Entity<Application>(entity =>
        {
            entity.HasKey(e => e.ApplicationId).HasName("PK__Applicat__C93A4C99C5525D7E");

            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20);

            entity.HasOne(d => d.Job).WithMany(p => p.Applications)
                .HasForeignKey(d => d.JobId)
                .HasConstraintName("FK__Applicati__JobId__28ED12D1");

            entity.HasOne(d => d.User).WithMany(p => p.Applications)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Applicati__UserI__29E1370A");
        });

        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.BookingId).HasName("PK__Bookings__73951ACDEB181BA4");

            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.BookingDate).HasColumnType("datetime");
            entity.Property(e => e.FlightId).HasColumnName("FlightID");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Flight).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.FlightId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Bookings__Flight__4B7734FF");

            entity.HasOne(d => d.User).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Bookings__UserID__4A8310C6");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.CityId).HasName("PK__Cities__F2D21B761AC66583");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.HasKey(e => e.CompanyId).HasName("PK__Companie__2D971CAC841873FD");

            entity.Property(e => e.CompanyName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LogoUrl).HasMaxLength(255);
        });

        modelBuilder.Entity<Flight>(entity =>
        {
            entity.HasKey(e => e.FlightId).HasName("PK__Flights__8A9E14EEDBB0E491");

            entity.Property(e => e.ArrivalTime).HasColumnType("datetime");
            entity.Property(e => e.BusinessClass)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("Business Class");
            entity.Property(e => e.DepartureTime).HasColumnType("datetime");
            entity.Property(e => e.Duration)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.EconomyClass)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("Economy Class");
            entity.Property(e => e.FlightNumber)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Airline).WithMany(p => p.Flights)
                .HasForeignKey(d => d.AirlineId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Flights__Airline__44CA3770");

            entity.HasOne(d => d.ArrivalAirport).WithMany(p => p.FlightArrivalAirports)
                .HasForeignKey(d => d.ArrivalAirportId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Flights__Arrival__46B27FE2");

            entity.HasOne(d => d.DepartureAirport).WithMany(p => p.FlightDepartureAirports)
                .HasForeignKey(d => d.DepartureAirportId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Flights__Departu__45BE5BA9");
        });

        modelBuilder.Entity<Hr>(entity =>
        {
            entity.HasKey(e => e.Hrid).HasName("PK__HR__14F5A1B587ECE263");

            entity.ToTable("HR");

            entity.Property(e => e.Hrid).HasColumnName("HRId");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.HrName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone).HasMaxLength(15);

            entity.HasOne(d => d.Company).WithMany(p => p.Hrs)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK__HR__CompanyId__1C873BEC");

            entity.HasOne(d => d.User).WithMany(p => p.Hrs)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__HR__UserId__1B9317B3");
        });

        modelBuilder.Entity<Interview>(entity =>
        {
            entity.HasKey(e => e.InterviewId).HasName("PK__Intervie__C97C58524A16927D");

            entity.Property(e => e.Date).HasColumnType("datetime");

            entity.HasOne(d => d.Application).WithMany(p => p.Interviews)
                .HasForeignKey(d => d.ApplicationId)
                .HasConstraintName("FK__Interview__Appli__41B8C09B");

            entity.HasOne(d => d.Interviewer).WithMany(p => p.Interviews)
                .HasForeignKey(d => d.InterviewerId)
                .HasConstraintName("FK__Interview__Inter__42ACE4D4");
        });

        modelBuilder.Entity<Interviewer>(entity =>
        {
            entity.HasKey(e => e.InterviewerId).HasName("PK__Intervie__C29BDA1DFB3BA1D0");

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone).HasMaxLength(15);

            entity.HasOne(d => d.Company).WithMany(p => p.Interviewers)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK__Interview__Compa__2057CCD0");

            entity.HasOne(d => d.Hr).WithMany(p => p.Interviewers)
                .HasForeignKey(d => d.HrId)
                .HasConstraintName("FK_Interviewers_Hrs");

            entity.HasOne(d => d.User).WithMany(p => p.Interviewers)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Interview__UserI__1F63A897");
        });

        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.JobId).HasName("PK__Jobs__056690C2DF85F7E9");

            entity.Property(e => e.JobTitle)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.Company).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK__Jobs__CompanyId__2610A626");
        });

        modelBuilder.Entity<Passenger>(entity =>
        {
            entity.HasKey(e => e.PassengerId).HasName("PK__Passenge__88915F90CB255B21");

            entity.Property(e => e.PassengerId).HasColumnName("PassengerID");
            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PassportNumber)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Booking).WithMany(p => p.Passengers)
                .HasForeignKey(d => d.BookingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Passenger__Booki__4E53A1AA");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasKey(e => e.StudentId).HasName("PK__Students__32C52B992349D8C0");

            entity.Property(e => e.Branch).IsRequired();
            entity.Property(e => e.City).IsRequired();
            entity.Property(e => e.CollegeName)
                .IsRequired()
                .HasColumnName("College Name");
            entity.Property(e => e.Graduation).IsRequired();
            entity.Property(e => e.GraduationYear)
                .HasMaxLength(10)
                .HasColumnName("Graduation Year");
            entity.Property(e => e.Mobile)
                .IsRequired()
                .HasMaxLength(11);
            entity.Property(e => e.University).IsRequired();

            entity.HasOne(d => d.User).WithMany(p => p.Students)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Students__UserId__55BFB948");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCAC63C09755");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E4FE996B95").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}